{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setHeroes","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","heroes","type","value","onChange","target","getGifs","heroe","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","props","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAmCeA,EAhCY,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAAe,EAEJC,mBAAS,IAFL,mBAEjCC,EAFiC,KAErBC,EAFqB,KAiBxC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAU,SAAAS,GAAM,OAAKP,GAAL,mBAAqBO,OACrCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCWhBG,EAlBK,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,qBAVL,kBAcZN,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,OAAf,UAEI,qBAAKC,IAAKf,EAAIA,IAAKgB,IAAKN,IACxB,4BAAIA,QCJHO,EAAU,SAAC,GAAa,IAAZnB,EAAW,EAAXA,MAAW,ECDR,SAAEA,GAAY,IAAD,EACXd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAqBrC,OAfAC,qBAAU,WAENxB,EAASC,GACJwB,MAAK,SAAAxB,GAEFsB,EAAS,CACLf,KAAMP,EACNoB,SAAS,SAMvB,CAACpB,IAEIqB,EDlBwBI,CAAczB,GAAjCa,EAFoB,EAEzBN,KAAaa,EAFY,EAEZA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,sCAAd,SAAqDhB,IAEpDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,8CAAf,SAEQH,EAAOJ,KAAK,SAAAC,GACR,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEctCe,EA1Ba,SAACC,GAAW,IAAD,EAEPzC,mBAAS,CAAC,SAFH,mBAE5BQ,EAF4B,KAEpBT,EAFoB,KAInC,OACI,qCACI,oBAAI0B,GAAG,QAAP,0BACA,cAAC,EAAD,CAAa1B,UAAWA,IAExB,uBACA,6BAEQS,EAAOe,KAAI,SAAAT,GAAK,OAEZ,cAAC,EAAD,CAEAA,MAASA,GADJA,YCd7B4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0f3d996d.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setHeroes}) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setHeroes(heroes => [inputValue , ...heroes]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setHeroes: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","\r\nexport const getGifs = async( heroe ) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(heroe) }&limit=10&api_key=nYoZTbReIemwXxrKU3C2vjrS8u75leSt`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}\r\n\r\nexport default getGifs","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            \r\n            <img src={url.url} alt={title} />\r\n            <p>{title}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({heroe}) => {\r\n    \r\n    const {data:images, loading} = useFetchGifs( heroe );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounceIn\">{heroe}</h3>\r\n            \r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid animate__animated animate__fadeIn\">\r\n                {\r\n                    images.map( img => {\r\n                        return <GifGridItem key={img.id} {...img} />\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport getGifs from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( heroe ) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs( heroe )\r\n            .then(heroe => {\r\n\r\n                setState({\r\n                    data: heroe,\r\n                    loading: false\r\n                })\r\n\r\n            })\r\n\r\n\r\n    },[heroe])\r\n\r\n    return state;\r\n}\r\n","import React,{useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = (props) => {\r\n\r\n    const [heroes, setHeroes] = useState(['Goku'])\r\n\r\n    return (\r\n        <>\r\n            <h2 id=\"title\">GifExpertApp</h2>\r\n            <AddCategory setHeroes={setHeroes}/>\r\n            \r\n            <hr />\r\n            <ol>\r\n                {\r\n                    heroes.map(heroe => \r\n                        \r\n                        <GifGrid \r\n                        key={heroe}\r\n                        heroe = {heroe}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}